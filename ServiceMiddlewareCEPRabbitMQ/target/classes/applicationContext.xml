<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
   
   
   
  	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:rabbitmq.properties
				</value>
			</list>
		</property>
	</bean>
	
	<bean class="com.service.middleware.util.ApplicationContextProvider"/>
	<bean id="monitorEventHandler" class="com.service.middleware.cep.handler.MonitorEventHandler" />
	<bean id="monitorEventSubscriber" class="com.service.middleware.cep.subscribe.MonitorEventSubscriber" />
	
	<!-- Creates automatic queue -->
	<rabbit:queue name="${queue.rule.cep}" auto-delete="false" durable="true" exclusive="false"  />
	<rabbit:queue name="${queue.streaming.data}" auto-delete="false" durable="true" exclusive="false"  />
   
   <!-- From RabbitMQ To STDOUT -->

	<int-amqp:inbound-channel-adapter channel="fromRabbit2"	queue-names="${queue.streaming.data}" connection-factory="connectionFactory" />
	<int:channel id="fromRabbit2" />
	<bean id="consumerServiceActivator" class="com.service.middleware.util.ConsumerServiceActivator" />
	<int:service-activator input-channel="fromRabbit2" ref="consumerServiceActivator" method="disparaEvento" />
    
    <int:publish-subscribe-channel id="outputChannel" />
	<!-- From RabbitMQ To STDOUT -->
	<int-amqp:inbound-channel-adapter channel="fromRabbit"	queue-names="${queue.rule.cep}" connection-factory="connectionFactory" />
	<int:channel id="fromRabbit" />
	<!-- transforms currentTemp::tempScale into a Temperature model -->
	<bean id="transformer" class="com.service.middleware.util.ModelTransformer"/>
	<int:transformer id="MODEL" input-channel="fromRabbit" output-channel="outputChannel" method="toModel" ref="transformer">
	</int:transformer>
	

	<!-- Infrastructure -->
	<rabbit:connection-factory id="connectionFactory" host="${spring.rabbitmq.host}" port="${spring.rabbitmq.port}" virtual-host="${spring.rabbitmq.virtualhost}"  username="${spring.rabbitmq.username}" 
	password="${spring.rabbitmq.password}" />
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />
	<rabbit:admin connection-factory="connectionFactory" />
	
	<!-- 
	 <rabbit:direct-exchange name="si.cep.exchange" >
		<rabbit:bindings>
			<rabbit:binding queue="si.cep.queue" key="si.cep.binding" />
		</rabbit:bindings>
	</rabbit:direct-exchange>  
    
    -->
</beans>